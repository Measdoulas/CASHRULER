#!/bin/bash

# Script d'automatisation des tests et validations
echo "üöÄ D√©marrage de la validation compl√®te de CashRuler"

# Configuration
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
RESULTS_DIR="$PROJECT_DIR/validation-results"
DATE=$(date +"%Y-%m-%d_%H-%M")
LOG_FILE="$RESULTS_DIR/validation_$DATE.log"

# Cr√©ation du dossier de r√©sultats
mkdir -p "$RESULTS_DIR"

# Fonction de logging
log() {
    echo "[$(date +"%H:%M:%S")] $1" | tee -a "$LOG_FILE"
}

# Nettoyage
log "üßπ Nettoyage de l'environnement..."
./gradlew clean >> "$LOG_FILE" 2>&1

# V√©rification du code
log "üìù Analyse statique du code..."
./gradlew ktlintCheck >> "$LOG_FILE" 2>&1
KTLINT_RESULT=$?

# Tests unitaires
log "üß™ Ex√©cution des tests unitaires..."
./gradlew testDebugUnitTest >> "$LOG_FILE" 2>&1
UNIT_TEST_RESULT=$?

# Tests d'int√©gration
log "üîÑ Ex√©cution des tests d'int√©gration..."
./gradlew connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.cashruler.validation.ValidationSuite >> "$LOG_FILE" 2>&1
INTEGRATION_TEST_RESULT=$?

# Tests de performance
log "‚ö° Ex√©cution des tests de performance..."
./gradlew :app:benchmarkAppStart >> "$LOG_FILE" 2>&1
PERFORMANCE_TEST_RESULT=$?

# G√©n√©ration des rapports
log "üìä G√©n√©ration des rapports..."
./gradlew jacocoTestReport >> "$LOG_FILE" 2>&1

# V√©rification des r√©sultats
check_results() {
    local test_name="$1"
    local result="$2"
    if [ $result -eq 0 ]; then
        log "‚úÖ $test_name: OK"
    else
        log "‚ùå $test_name: √âCHEC"
        GLOBAL_SUCCESS=false
    fi
}

GLOBAL_SUCCESS=true

check_results "Analyse statique" $KTLINT_RESULT
check_results "Tests unitaires" $UNIT_TEST_RESULT
check_results "Tests d'int√©gration" $INTEGRATION_TEST_RESULT
check_results "Tests de performance" $PERFORMANCE_TEST_RESULT

# Compilation du rapport final
REPORT_FILE="$RESULTS_DIR/validation_summary_$DATE.md"

cat << EOF > "$REPORT_FILE"
# Rapport de Validation CashRuler

Date: $(date)

## R√©sultats des Tests

| Type de Test | Statut |
|--------------|--------|
| Analyse statique | $([ $KTLINT_RESULT -eq 0 ] && echo "‚úÖ" || echo "‚ùå") |
| Tests unitaires | $([ $UNIT_TEST_RESULT -eq 0 ] && echo "‚úÖ" || echo "‚ùå") |
| Tests d'int√©gration | $([ $INTEGRATION_TEST_RESULT -eq 0 ] && echo "‚úÖ" || echo "‚ùå") |
| Tests de performance | $([ $PERFORMANCE_TEST_RESULT -eq 0 ] && echo "‚úÖ" || echo "‚ùå") |

## M√©triques

- Couverture de code: $(grep -r "Total.*%" "$PROJECT_DIR/app/build/reports/coverage" | tail -1 | awk '{print $NF}')
- Tests ex√©cut√©s: $(grep -r "Tests run:" "$PROJECT_DIR/app/build/reports/tests" | awk '{sum += $3} END {print sum}')
- Dur√©e totale: $(date -d@$SECONDS -u +%H:%M:%S)

## D√©tails des Rapports

Les rapports d√©taill√©s sont disponibles dans les emplacements suivants:
- Tests unitaires: app/build/reports/tests/
- Couverture: app/build/reports/coverage/
- Lint: app/build/reports/lint/
- Performance: app/build/reports/benchmarks/

EOF

# Notification du r√©sultat
if [ "$GLOBAL_SUCCESS" = true ]; then
    log "‚ú® Validation termin√©e avec succ√®s!"
    exit 0
else
    log "‚ö†Ô∏è La validation a √©chou√©. Consultez les rapports pour plus de d√©tails."
    exit 1
fi
